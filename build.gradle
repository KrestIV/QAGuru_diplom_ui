plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.10.0'
    id 'io.freefair.lombok' version '8.13.1'
}

compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

def selenideVersion = "7.8.1",
    restAssuredVersion = "5.3.1",
    allureVersion = "2.28.1",
    ownerVersion = "1.0.12",
    junitVersion = "5.13.4",
    assertjVersion = "3.27.4",
    slf4jVersion = "2.0.17",
    javafakerVersion = "1.0.2"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjVersion.set("1.9.22")
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.assertj:assertj-core:$assertjVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "com.github.javafaker:javafaker:$javafakerVersion"
    )
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task full_test(type: Test) {
    useJUnitPlatform {
        includeTags("FullTest")
    }
}

task cart_test(type: Test) {
    useJUnitPlatform {
        includeTags("CartTests")
    }
}